#OBJDUMP
[xpazurm00@localhost elf-analysis-excercises_2023]$ objdump -d exercise-1

exercise-1:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <_init>:
  401000:       f3 0f 1e fa             endbr64
  401004:       48 83 ec 08             sub    $0x8,%rsp
  401008:       48 8b 05 e9 2f 00 00    mov    0x2fe9(%rip),%rax        # 403ff8 <__gmon_start__@Base>
  40100f:       48 85 c0                test   %rax,%rax
  401012:       74 02                   je     401016 <_init+0x16>
  401014:       ff d0                   callq  *%rax
  401016:       48 83 c4 08             add    $0x8,%rsp
  40101a:       c3                      retq

Disassembly of section .plt:

0000000000401020 <strncmp@plt-0x10>:
  401020:       ff 35 e2 2f 00 00       pushq  0x2fe2(%rip)        # 404008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:       ff 25 e4 2f 00 00       jmpq   *0x2fe4(%rip)        # 404010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102c:       0f 1f 40 00             nopl   0x0(%rax)

0000000000401030 <strncmp@plt>:
  401030:       ff 25 e2 2f 00 00       jmpq   *0x2fe2(%rip)        # 404018 <strncmp@GLIBC_2.2.5>
  401036:       68 00 00 00 00          pushq  $0x0
  40103b:       e9 e0 ff ff ff          jmpq   401020 <_init+0x20>

0000000000401040 <puts@plt>:
  401040:       ff 25 da 2f 00 00       jmpq   *0x2fda(%rip)        # 404020 <puts@GLIBC_2.2.5>
  401046:       68 01 00 00 00          pushq  $0x1
  40104b:       e9 d0 ff ff ff          jmpq   401020 <_init+0x20>

0000000000401050 <printf@plt>:
  401050:       ff 25 d2 2f 00 00       jmpq   *0x2fd2(%rip)        # 404028 <printf@GLIBC_2.2.5>
  401056:       68 02 00 00 00          pushq  $0x2
  40105b:       e9 c0 ff ff ff          jmpq   401020 <_init+0x20>

0000000000401060 <__isoc99_scanf@plt>:
  401060:       ff 25 ca 2f 00 00       jmpq   *0x2fca(%rip)        # 404030 <__isoc99_scanf@GLIBC_2.7>
  401066:       68 03 00 00 00          pushq  $0x3
  40106b:       e9 b0 ff ff ff          jmpq   401020 <_init+0x20>

Disassembly of section .text:

0000000000401070 <_start>:
  401070:       f3 0f 1e fa             endbr64
  401074:       31 ed                   xor    %ebp,%ebp
  401076:       49 89 d1                mov    %rdx,%r9
  401079:       5e                      pop    %rsi
  40107a:       48 89 e2                mov    %rsp,%rdx
  40107d:       48 83 e4 f0             and    $0xfffffffffffffff0,%rsp
  401081:       50                      push   %rax
  401082:       54                      push   %rsp
  401083:       45 31 c0                xor    %r8d,%r8d
  401086:       31 c9                   xor    %ecx,%ecx
  401088:       48 c7 c7 56 11 40 00    mov    $0x401156,%rdi
  40108f:       ff 15 5b 2f 00 00       callq  *0x2f5b(%rip)        # 403ff0 <__libc_start_main@GLIBC_2.34>
  401095:       f4                      hlt

0000000000401096 <.annobin_abi_note.c>:
  401096:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)
  40109d:       00 00 00

00000000004010a0 <_dl_relocate_static_pie>:
  4010a0:       f3 0f 1e fa             endbr64
  4010a4:       c3                      retq

00000000004010a5 <.annobin__dl_relocate_static_pie.end>:
  4010a5:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)
  4010ac:       00 00 00
  4010af:       90                      nop

00000000004010b0 <deregister_tm_clones>:
  4010b0:       b8 50 40 40 00          mov    $0x404050,%eax
  4010b5:       48 3d 50 40 40 00       cmp    $0x404050,%rax
  4010bb:       74 13                   je     4010d0 <deregister_tm_clones+0x20>
  4010bd:       b8 00 00 00 00          mov    $0x0,%eax
  4010c2:       48 85 c0                test   %rax,%rax
  4010c5:       74 09                   je     4010d0 <deregister_tm_clones+0x20>
  4010c7:       bf 50 40 40 00          mov    $0x404050,%edi
  4010cc:       ff e0                   jmpq   *%rax
  4010ce:       66 90                   xchg   %ax,%ax
  4010d0:       c3                      retq
  4010d1:       66 66 2e 0f 1f 84 00    data16 nopw %cs:0x0(%rax,%rax,1)
  4010d8:       00 00 00 00
  4010dc:       0f 1f 40 00             nopl   0x0(%rax)

00000000004010e0 <register_tm_clones>:
  4010e0:       be 50 40 40 00          mov    $0x404050,%esi
  4010e5:       48 81 ee 50 40 40 00    sub    $0x404050,%rsi
  4010ec:       48 89 f0                mov    %rsi,%rax
  4010ef:       48 c1 ee 3f             shr    $0x3f,%rsi
  4010f3:       48 c1 f8 03             sar    $0x3,%rax
  4010f7:       48 01 c6                add    %rax,%rsi
  4010fa:       48 d1 fe                sar    %rsi
  4010fd:       74 11                   je     401110 <register_tm_clones+0x30>
  4010ff:       b8 00 00 00 00          mov    $0x0,%eax
  401104:       48 85 c0                test   %rax,%rax
  401107:       74 07                   je     401110 <register_tm_clones+0x30>
  401109:       bf 50 40 40 00          mov    $0x404050,%edi
  40110e:       ff e0                   jmpq   *%rax
  401110:       c3                      retq
  401111:       66 66 2e 0f 1f 84 00    data16 nopw %cs:0x0(%rax,%rax,1)
  401118:       00 00 00 00
  40111c:       0f 1f 40 00             nopl   0x0(%rax)

0000000000401120 <__do_global_dtors_aux>:
  401120:       f3 0f 1e fa             endbr64
  401124:       80 3d 22 2f 00 00 00    cmpb   $0x0,0x2f22(%rip)        # 40404d <completed.0>
  40112b:       75 13                   jne    401140 <__do_global_dtors_aux+0x20>
  40112d:       55                      push   %rbp
  40112e:       48 89 e5                mov    %rsp,%rbp
  401131:       e8 7a ff ff ff          callq  4010b0 <deregister_tm_clones>
  401136:       c6 05 10 2f 00 00 01    movb   $0x1,0x2f10(%rip)        # 40404d <completed.0>
  40113d:       5d                      pop    %rbp
  40113e:       c3                      retq
  40113f:       90                      nop
  401140:       c3                      retq
  401141:       66 66 2e 0f 1f 84 00    data16 nopw %cs:0x0(%rax,%rax,1)
  401148:       00 00 00 00
  40114c:       0f 1f 40 00             nopl   0x0(%rax)

0000000000401150 <frame_dummy>:
  401150:       f3 0f 1e fa             endbr64
  401154:       eb 8a                   jmp    4010e0 <register_tm_clones>

0000000000401156 <main>:
  401156:       55                      push   %rbp
  401157:       48 89 e5                mov    %rsp,%rbp
  40115a:       48 83 ec 20             sub    $0x20,%rsp
  40115e:       bf 10 20 40 00          mov    $0x402010,%edi
  401163:       b8 00 00 00 00          mov    $0x0,%eax
  401168:       e8 e3 fe ff ff          callq  401050 <printf@plt>
  40116d:       48 8d 45 e0             lea    -0x20(%rbp),%rax
  401171:       48 89 c6                mov    %rax,%rsi
  401174:       bf 21 20 40 00          mov    $0x402021,%edi
  401179:       b8 00 00 00 00          mov    $0x0,%eax
  40117e:       e8 dd fe ff ff          callq  401060 <__isoc99_scanf@plt>
  401183:       48 8d 45 e0             lea    -0x20(%rbp),%rax
  401187:       ba 0d 00 00 00          mov    $0xd,%edx
  40118c:       48 89 c6                mov    %rax,%rsi
  40118f:       bf 40 40 40 00          mov    $0x404040,%edi <--- password1 address
  401194:       e8 97 fe ff ff          callq  401030 <strncmp@plt>
  401199:       89 45 fc                mov    %eax,-0x4(%rbp)
  40119c:       83 7d fc 00             cmpl   $0x0,-0x4(%rbp)
  4011a0:       74 0c                   je     4011ae <main+0x58>
  4011a2:       bf 26 20 40 00          mov    $0x402026,%edi
  4011a7:       e8 94 fe ff ff          callq  401040 <puts@plt>
  4011ac:       eb 0a                   jmp    4011b8 <main+0x62>
  4011ae:       bf 3c 20 40 00          mov    $0x40203c,%edi
  4011b3:       e8 88 fe ff ff          callq  401040 <puts@plt>
  4011b8:       b8 00 00 00 00          mov    $0x0,%eax
  4011bd:       c9                      leaveq
  4011be:       c3                      retq

Disassembly of section .fini:

00000000004011c0 <_fini>:
  4011c0:       f3 0f 1e fa             endbr64
  4011c4:       48 83 ec 08             sub    $0x8,%rsp
  4011c8:       48 83 c4 08             add    $0x8,%rsp
  4011cc:       c3                      retq

#STRINGS
xpazurm00@localhost elf-analysis-excercises_2023]$ strings exercise-1
/lib64/ld-linux-x86-64.so.2
puts
__libc_start_main
printf
__isoc99_scanf
strncmp
libc.so.6
GLIBC_2.7
GLIBC_2.2.5
GLIBC_2.34
__gmon_start__
PTE1
H=P@@
Enter password:
%20s
Password is incorrect
Password is correct
;*3$"
C80@6qIVufh# <--- password1
GCC: (GNU) 12.2.1 20221121 (Red Hat 12.2.1-4)
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3p1092
running gcc 12.2.1 20221121
annobin gcc 12.2.1 20220819
plugin name: annobin
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
crt1.o
.annobin_abi_note.c
.annobin_abi_note.c_end
.annobin_abi_note.c.hot
.annobin_abi_note.c_end.hot
.annobin_abi_note.c.unlikely
.annobin_abi_note.c_end.unlikely
.annobin_abi_note.c.startup
.annobin_abi_note.c_end.startup
.annobin_abi_note.c.exit
.annobin_abi_note.c_end.exit
__abi_tag
.annobin_init.c
.annobin_init.c_end
.annobin_init.c.hot
.annobin_init.c_end.hot
.annobin_init.c.unlikely
.annobin_init.c_end.unlikely
.annobin_init.c.startup
.annobin_init.c_end.startup
.annobin_init.c.exit
.annobin_init.c_end.exit
.annobin_static_reloc.c
.annobin_static_reloc.c_end
.annobin_static_reloc.c.hot
.annobin_static_reloc.c_end.hot
.annobin_static_reloc.c.unlikely
.annobin_static_reloc.c_end.unlikely
.annobin_static_reloc.c.startup
.annobin_static_reloc.c_end.startup
.annobin_static_reloc.c.exit
.annobin_static_reloc.c_end.exit
.annobin__dl_relocate_static_pie.start
.annobin__dl_relocate_static_pie.end
crtbegin.o
deregister_tm_clones
__do_global_dtors_aux
completed.0
__do_global_dtors_aux_fini_array_entry
frame_dummy
__frame_dummy_init_array_entry
exercise-1.c
crtend.o
__FRAME_END__
_DYNAMIC
__GNU_EH_FRAME_HDR
_GLOBAL_OFFSET_TABLE_
__libc_start_main@GLIBC_2.34
strncmp@GLIBC_2.2.5
puts@GLIBC_2.2.5
_edata
_fini
printf@GLIBC_2.2.5
__data_start
__gmon_start__
__dso_handle
_IO_stdin_used
_dl_relocate_static_pie
__bss_start
main
correct_password
__isoc99_scanf@GLIBC_2.7
__TMC_END__
_init
.symtab
.strtab
.shstrtab
.interp
.note.gnu.property
.note.gnu.build-id
.note.ABI-tag
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.dynamic
.got
.got.plt
.data
.bss
.comment
.gnu.build.attributes

[xpazurm00@localhost elf-analysis-excercises_2023]$ readelf -s
readelf: Warning: Nothing to do.
Usage: readelf <option(s)> elf-file(s)
 Display information about the contents of ELF format files
 Options are:
  -a --all               Equivalent to: -h -l -S -s -r -d -V -A -I
  -h --file-header       Display the ELF file header
  -l --program-headers   Display the program headers
     --segments          An alias for --program-headers
  -S --section-headers   Display the sections' header
     --sections          An alias for --section-headers
  -g --section-groups    Display the section groups
  -t --section-details   Display the section details
  -e --headers           Equivalent to: -h -l -S
  -s --syms              Display the symbol table
     --symbols           An alias for --syms
     --dyn-syms          Display the dynamic symbol table
  -n --notes             Display the core notes (if present)
  -r --relocs            Display the relocations (if present)
  -u --unwind            Display the unwind info (if present)
  -d --dynamic           Display the dynamic section (if present)
  -V --version-info      Display the version sections (if present)
  -A --arch-specific     Display architecture specific information (if any)
  -c --archive-index     Display the symbol/file index in an archive
  -D --use-dynamic       Use the dynamic section info when displaying symbols
  -L --lint|--enable-checks  Display warning messages for possible problems
  -x --hex-dump=<number|name>
                         Dump the contents of section <number|name> as bytes
  -p --string-dump=<number|name>
                         Dump the contents of section <number|name> as strings
  -R --relocated-dump=<number|name>
                         Dump the contents of section <number|name> as relocated bytes
  -z --decompress        Decompress section before dumping it
  -w[lLiaprmfFsoORtUuTgAckK] or
  --debug-dump[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,
               =frames-interp,=str,=str-offsets,=loc,=Ranges,=pubtypes,
               =gdb_index,=trace_info,=trace_abbrev,=trace_aranges,
               =addr,=cu_index,=links,=follow-links]
                         Display the contents of DWARF debug sections
  --dwarf-depth=N        Do not display DIEs at depth N or greater
  --dwarf-start=N        Display DIEs starting with N, at the same depth
                         or deeper
  --ctf=<number|name>    Display CTF info from section <number|name>
  --ctf-parent=<number|name>
                         Use section <number|name> as the CTF parent

  --ctf-symbols=<number|name>
                         Use section <number|name> as the CTF external symtab

  --ctf-strings=<number|name>
                         Use section <number|name> as the CTF external strtab

  -I --histogram         Display histogram of bucket list lengths
  -W --wide              Allow output width to exceed 80 characters
  -T --silent-truncation If a symbol name is truncated, do not add a suffix [...]
  -U --unicode=[locale|escape|hex|highlight|invalid]
                         Display unicode characters as determined by the current locale
                          (default), escape sequences, "<hex sequences>", highlighted
                          escape sequences, or treat them as invalid and display as
                          "{hex sequences}"
  @<file>                Read options from <file>
  -H --help              Display this information
  -v --version           Display the version number of readelf

#READELF SYMTAB
[xpazurm00@localhost elf-analysis-excercises_2023]$ readelf -s exercise-1

Symbol table '.dynsym' contains 7 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND
     1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.34 (2)
     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND [...]@GLIBC_2.2.5 (3)
     3: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5 (3)
     4: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND [...]@GLIBC_2.2.5 (3)
     5: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
     6: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __[...]@GLIBC_2.7 (4)

Symbol table '.symtab' contains 70 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND
     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crt1.o
     2: 0000000000401096     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_abi_note.c
     3: 0000000000401096     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_abi_not[...]
     4: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_abi_not[...]
     5: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_abi_not[...]
     6: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_abi_not[...]
     7: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_abi_not[...]
     8: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_abi_not[...]
     9: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_abi_not[...]
    10: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_abi_not[...]
    11: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_abi_not[...]
    12: 000000000040039c    32 OBJECT  LOCAL  DEFAULT    4 __abi_tag
    13: 0000000000401096     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_init.c
    14: 0000000000401096     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_init.c_end
    15: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_init.c.hot
    16: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_init.c_[...]
    17: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_init.c.[...]
    18: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_init.c_[...]
    19: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_init.c.[...]
    20: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_init.c_[...]
    21: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_init.c.exit
    22: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_init.c_[...]
    23: 00000000004010a0     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_static_[...]
    24: 00000000004010a5     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_static_[...]
    25: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_static_[...]
    26: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_static_[...]
    27: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_static_[...]
    28: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_static_[...]
    29: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_static_[...]
    30: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_static_[...]
    31: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_static_[...]
    32: 0000000000401070     0 NOTYPE  LOCAL  HIDDEN    14 .annobin_static_[...]
    33: 00000000004010a0     0 NOTYPE  LOCAL  HIDDEN    14 .annobin__dl_rel[...]
    34: 00000000004010a5     0 NOTYPE  LOCAL  HIDDEN    14 .annobin__dl_rel[...]
    35: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtbegin.o
    36: 00000000004010b0     0 FUNC    LOCAL  DEFAULT   14 deregister_tm_clones
    37: 00000000004010e0     0 FUNC    LOCAL  DEFAULT   14 register_tm_clones
    38: 0000000000401120     0 FUNC    LOCAL  DEFAULT   14 __do_global_dtors_aux
    39: 000000000040404d     1 OBJECT  LOCAL  DEFAULT   25 completed.0
    40: 0000000000403e18     0 OBJECT  LOCAL  DEFAULT   20 __do_global_dtor[...]
    41: 0000000000401150     0 FUNC    LOCAL  DEFAULT   14 frame_dummy
    42: 0000000000403e10     0 OBJECT  LOCAL  DEFAULT   19 __frame_dummy_in[...]
    43: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS exercise-1.c
    44: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtend.o
    45: 0000000000402108     0 OBJECT  LOCAL  DEFAULT   18 __FRAME_END__
    46: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS
    47: 0000000000403e20     0 OBJECT  LOCAL  DEFAULT   21 _DYNAMIC
    48: 0000000000402050     0 NOTYPE  LOCAL  DEFAULT   17 __GNU_EH_FRAME_HDR
    49: 0000000000404000     0 OBJECT  LOCAL  DEFAULT   23 _GLOBAL_OFFSET_TABLE_
    50: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_mai[...]
    51: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND strncmp@GLIBC_2.2.5
    52: 0000000000404038     0 NOTYPE  WEAK   DEFAULT   24 data_start
    53: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5
    54: 000000000040404d     0 NOTYPE  GLOBAL DEFAULT   24 _edata
    55: 00000000004011c0     0 FUNC    GLOBAL HIDDEN    15 _fini
    56: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND printf@GLIBC_2.2.5
    57: 0000000000404038     0 NOTYPE  GLOBAL DEFAULT   24 __data_start
    58: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
    59: 0000000000402008     0 OBJECT  GLOBAL HIDDEN    16 __dso_handle
    60: 0000000000402000     4 OBJECT  GLOBAL DEFAULT   16 _IO_stdin_used
    61: 0000000000404050     0 NOTYPE  GLOBAL DEFAULT   25 _end
    62: 00000000004010a0     5 FUNC    GLOBAL HIDDEN    14 _dl_relocate_sta[...]
    63: 0000000000401070    38 FUNC    GLOBAL DEFAULT   14 _start
    64: 000000000040404d     0 NOTYPE  GLOBAL DEFAULT   25 __bss_start
    65: 0000000000401156   105 FUNC    GLOBAL DEFAULT   14 main
    66: 0000000000404040    13 OBJECT  GLOBAL DEFAULT   24 correct_password <--- password1 address
    67: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __isoc99_scanf@G[...]
    68: 0000000000404050     0 OBJECT  GLOBAL HIDDEN    24 __TMC_END__
    69: 0000000000401000     0 FUNC    GLOBAL HIDDEN    12 _init

#READELF SECTIONS
pazurm00@localhost elf-analysis-excercises_2023]$ readelf -S exercise-1
There are 31 section headers, starting at offset 0x5a88:

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .interp           PROGBITS         0000000000400318  00000318
       000000000000001c  0000000000000000   A       0     0     1
  [ 2] .note.gnu.pr[...] NOTE             0000000000400338  00000338
       0000000000000040  0000000000000000   A       0     0     8
  [ 3] .note.gnu.bu[...] NOTE             0000000000400378  00000378
       0000000000000024  0000000000000000   A       0     0     4
  [ 4] .note.ABI-tag     NOTE             000000000040039c  0000039c
       0000000000000020  0000000000000000   A       0     0     4
  [ 5] .gnu.hash         GNU_HASH         00000000004003c0  000003c0
       000000000000001c  0000000000000000   A       6     0     8
  [ 6] .dynsym           DYNSYM           00000000004003e0  000003e0
       00000000000000a8  0000000000000018   A       7     1     8
  [ 7] .dynstr           STRTAB           0000000000400488  00000488
       0000000000000070  0000000000000000   A       0     0     1
  [ 8] .gnu.version      VERSYM           00000000004004f8  000004f8
       000000000000000e  0000000000000002   A       6     0     2
  [ 9] .gnu.version_r    VERNEED          0000000000400508  00000508
       0000000000000040  0000000000000000   A       7     1     8
  [10] .rela.dyn         RELA             0000000000400548  00000548
       0000000000000030  0000000000000018   A       6     0     8
  [11] .rela.plt         RELA             0000000000400578  00000578
       0000000000000060  0000000000000018  AI       6    23     8
  [12] .init             PROGBITS         0000000000401000  00001000
       000000000000001b  0000000000000000  AX       0     0     4
  [13] .plt              PROGBITS         0000000000401020  00001020
       0000000000000050  0000000000000010  AX       0     0     16
  [14] .text             PROGBITS         0000000000401070  00001070
       000000000000014f  0000000000000000  AX       0     0     16
  [15] .fini             PROGBITS         00000000004011c0  000011c0
       000000000000000d  0000000000000000  AX       0     0     4
  [16] .rodata           PROGBITS         0000000000402000  00002000
       0000000000000050  0000000000000000   A       0     0     8
  [17] .eh_frame_hdr     PROGBITS         0000000000402050  00002050
       000000000000002c  0000000000000000   A       0     0     4
  [18] .eh_frame         PROGBITS         0000000000402080  00002080
       000000000000008c  0000000000000000   A       0     0     8
  [19] .init_array       INIT_ARRAY       0000000000403e10  00002e10
       0000000000000008  0000000000000008  WA       0     0     8
  [20] .fini_array       FINI_ARRAY       0000000000403e18  00002e18
       0000000000000008  0000000000000008  WA       0     0     8
  [21] .dynamic          DYNAMIC          0000000000403e20  00002e20
       00000000000001d0  0000000000000010  WA       7     0     8
  [22] .got              PROGBITS         0000000000403ff0  00002ff0
       0000000000000010  0000000000000008  WA       0     0     8
  [23] .got.plt          PROGBITS         0000000000404000  00003000
       0000000000000038  0000000000000008  WA       0     0     8
  [24] .data             PROGBITS         0000000000404038  00003038 <--- password1 address 404040 in this section 
       0000000000000015  0000000000000000  WA       0     0     8
  [25] .bss              NOBITS           000000000040404d  0000304d
       0000000000000003  0000000000000000  WA       0     0     1
  [26] .comment          PROGBITS         0000000000000000  0000304d
       000000000000002e  0000000000000001  MS       0     0     1
  [27] .gnu.build.a[...] NOTE             0000000000406050  0000307c
       0000000000001cd4  0000000000000000   L      14     0     4
  [28] .symtab           SYMTAB           0000000000000000  00004d50
       0000000000000690  0000000000000018          29    50     8
  [29] .strtab           STRTAB           0000000000000000  000053e0
       0000000000000577  0000000000000000           0     0     1
  [30] .shstrtab         STRTAB           0000000000000000  00005957
       000000000000012c  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  l (large), p (processor specific)

#READELF HEX DUMP
[xpazurm00@localhost elf-analysis-excercises_2023]$ readelf -x .data exercise-1

Hex dump of section '.data':
  0x00404038 00000000 00000000 43383040 36714956 ........C80@6qIV
  0x00404048 75666823 00                         ufh#.

#READELF STRING DUMP
[xpazurm00@localhost elf-analysis-excercises_2023]$ readelf -p .data exercise-1

String dump of section '.data':
  [     8]  C80@6qIVufh#

[xpazurm00@localhost elf-analysis-excercises_2023]$ ./exercise-1
Enter password: C80@6qIVufh#
Password is correct